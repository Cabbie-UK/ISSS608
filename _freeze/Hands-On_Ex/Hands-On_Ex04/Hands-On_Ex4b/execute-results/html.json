{
  "hash": "4eed7c3f345ee2915a9f44ea1dd655e6",
  "result": {
    "markdown": "---\ntitle: \"6 Visualise Uncertainty\"\nsubtitle: Hands-On Exercise for Week 4\nauthor: \"KB\"\neditor: visual\nexecute:\n  freeze: auto \n  warning: false\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n    toc-depth: 4\n---\n\n\nPublished: 4-May-2023\n\nModified: 6-May-2023\n\n## 6.1 Learning Outcome\n\nA point estimate, such as mean, is a single numerical value that is used to estimate an unknown population parameter. On the other hand, a range estimate is a range of values that is used to estimate an unknown population parameter. A range estimate is useful when a single point estimate is not precise enough, or when we want to communicate the level of uncertainty surrounding the point estimate.\n\nIn this exercise, we will explore approaches to visualise the uncertainty of point estimates.\n\n## 6.2 Getting Started\n\n### 6.2.1 Install and load the required r libraries\n\nInstall and load the the required R packages. The name and function of the new package that will be used for this exercise is as follow:\n\n-   **ggdist**: provides a range of functions for creating visualizations of probability distributions\n-   **knitr**: create high-quality, fully reproducible documents that integrate code, text, and graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, plotly, crosstalk, DT, gganimate, ggdist, knitr)\n```\n:::\n\n\n### 6.2.2 Import the data\n\nWe will be using the same exam scores data-set that was featured in my [Hands-On Exercise for Week 1](https://boomie-boom-isss608.netlify.app/hands-on_ex/hands-on_ex01/hands-on_ex1#import-the-data \"Additional info on the data-set\").\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv('data/Exam_data.csv', show_col_types = FALSE )\n```\n:::\n\n\n## 6.3 Visualise the uncertainty of point estimates with ggplot2 package\n\nFirst, we perform with following on the exam scores data-set:\n\n-   group the observations by RACE,\n\n-   compute the count of observations, mean, standard deviation and standard error of Maths scores by RACE, and\n\n-   assign the output as a tibble data table called \\`my_sum\n\n-   print the tibble data using `kable()` function from **knitr**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nkable(head(my_sum), format = 'html') \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> RACE </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> se </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Chinese </td>\n   <td style=\"text-align:right;\"> 193 </td>\n   <td style=\"text-align:right;\"> 76.50777 </td>\n   <td style=\"text-align:right;\"> 15.69040 </td>\n   <td style=\"text-align:right;\"> 1.132357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Indian </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 60.66667 </td>\n   <td style=\"text-align:right;\"> 23.35237 </td>\n   <td style=\"text-align:right;\"> 7.041005 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Malay </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 57.44444 </td>\n   <td style=\"text-align:right;\"> 21.13478 </td>\n   <td style=\"text-align:right;\"> 2.043177 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Others </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 69.66667 </td>\n   <td style=\"text-align:right;\"> 10.72381 </td>\n   <td style=\"text-align:right;\"> 3.791438 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nWe can use the `geom_errorbar()` function to reveal the standard error of mean maths score by race in the following chart.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard Error of the Mean Math Scores by Race\")\n```\n\n::: {.cell-output-display}\n![](Hands-On_Ex4b_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n## We plotted this before\\...\n\nCheck out [this plot](https://cosmic-boon.netlify.app/hands-on_ex/hands-on_ex03/hands-on_ex3a#the-onclick-argument) which we did in an earlier exercise.\n:::\n\nWe can also use the `geom_errorbar()` function to reveal the 95% Confidence Interval of the mean maths score by race in the following chart.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Calculate the lower and upper bound for confidence intervals\nmy_sum2 <- my_sum %>% \n  mutate(lower_ci = mean - qt(0.975, n-1)*se,\n         upper_ci = mean + qt(0.975, n-1)*se)\n\n# Create point estimate plot with error bars\nggplot(my_sum2) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-mean), \n        ymin=lower_ci, \n        ymax=upper_ci), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(title=\"95% Confidence Interval of the Mean Math Scores by Race\",\n       x = \"Race\",\n       y = \"Math Score\")\n```\n\n::: {.cell-output-display}\n![](Hands-On_Ex4b_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 6.3.1 Visualise the uncertainty of point estimates with interactive error bars\n\nThe following interactive error bar plot shows the 99% Confidence Interval of mean maths score by race.\n\n( üñ±Ô∏èClick on the average score (in red) for the cross-filtering to work)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare the summary table with the relevant stats\nmy_sum3 <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    'No. of pupils'=n(),\n    'Avg Scores'=mean(MATHS),\n    'Std Dev'=sd(MATHS),\n    'Std Error' = sd(MATHS)/sqrt(n()-1)\n    ) \n\n# Use highlight_key() to add a unique key to the data frame my_sum3 so that it can be linked to interactive plots later\nd <- highlight_key(my_sum3)\n\n# Prepare the error bar plot\np <- ggplot(d) +\n  geom_errorbar(\n    aes(x=reorder(RACE,-`Avg Scores`), \n        ymin=`Avg Scores` - qt(0.995, `No. of pupils`-1)*`Std Error`, \n        ymax=`Avg Scores` + qt(0.995, `No. of pupils`-1)*`Std Error`), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=`Avg Scores`), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(title=\"99% Confidence Interval of the Mean Math Scores by Race\",\n       x = \"Race\",\n       y = \"Math Score\")\n\n# Convert ggplot to an interactive plotly plot using the ggplotly(), \"plotly click\" specifies that highlight should be based on click\ngg <- highlight(ggplotly(p),on =        \n                \"plotly_click\")\n\n# Create a Bootstrap grid of two columns to house the 2 plots in the ratio of 5:7\nbscols(gg,datatable(d,options = list(dom='t')),widths = c(5,7))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container-fluid crosstalk-bscols\">\n<div class=\"row\">\n<div class=\"col-xs-5\">\n<div id=\"htmlwidget-adcfa8cc3cbb3b287f81\" style=\"width:100%;height:400px;\" class=\"plotly html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-adcfa8cc3cbb3b287f81\">{\"x\":{\"data\":[{\"x\":[1,3,4,2],\"y\":[76.5077720207254,60.6666666666667,57.4444444444444,69.6666666666667],\"text\":[\"reorder(RACE, -`Avg Scores`): Chinese<br />`Avg Scores` - qt(0.995, `No. of pupils` - 1) * `Std Error`: 73.56174<br />`Avg Scores` + qt(0.995, `No. of pupils` - 1) * `Std Error`: 79.45380\",\"reorder(RACE, -`Avg Scores`): Indian<br />`Avg Scores` - qt(0.995, `No. of pupils` - 1) * `Std Error`: 38.79867<br />`Avg Scores` + qt(0.995, `No. of pupils` - 1) * `Std Error`: 82.53467\",\"reorder(RACE, -`Avg Scores`): Malay<br />`Avg Scores` - qt(0.995, `No. of pupils` - 1) * `Std Error`: 52.08609<br />`Avg Scores` + qt(0.995, `No. of pupils` - 1) * `Std Error`: 62.80280\",\"reorder(RACE, -`Avg Scores`): Others<br />`Avg Scores` - qt(0.995, `No. of pupils` - 1) * `Std Error`: 56.94492<br />`Avg Scores` + qt(0.995, `No. of pupils` - 1) * `Std Error`: 82.38841\"],\"key\":[\"1\",\"2\",\"3\",\"4\"],\"type\":\"scatter\",\"mode\":\"lines\",\"opacity\":0.9,\"line\":{\"color\":\"transparent\"},\"error_y\":{\"array\":[2.94602871087125,21.8680005648053,5.35835368327874,12.7217421000248],\"arrayminus\":[2.94602871087125,21.8680005648053,5.35835368327874,12.7217421000248],\"type\":\"data\",\"width\":21.3333333333334,\"symmetric\":false,\"color\":\"rgba(0,0,0,1)\"},\"set\":\"SharedData945753e8\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"_isNestedKey\":false,\"frame\":null},{\"x\":[1,3,4,2],\"y\":[76.5077720207254,60.6666666666667,57.4444444444444,69.6666666666667],\"text\":[\"RACE: Chinese<br />Avg Scores: 76.50777\",\"RACE: Indian<br />Avg Scores: 60.66667\",\"RACE: Malay<br />Avg Scores: 57.44444\",\"RACE: Others<br />Avg Scores: 69.66667\"],\"key\":[\"1\",\"2\",\"3\",\"4\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,0,0,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,0,0,1)\"}},\"hoveron\":\"points\",\"set\":\"SharedData945753e8\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"_isNestedKey\":false,\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.7625570776256,\"r\":7.30593607305936,\"b\":40.1826484018265,\"l\":37.2602739726027},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"title\":{\"text\":\"99% Confidence Interval of the Mean Math Scores by Race\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.5342465753425},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.4,4.6],\"tickmode\":\"array\",\"ticktext\":[\"Chinese\",\"Others\",\"Indian\",\"Malay\"],\"tickvals\":[1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"Chinese\",\"Others\",\"Indian\",\"Malay\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Race\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[36.6118660453808,84.7214672879525],\"tickmode\":\"array\",\"ticktext\":[\"40\",\"50\",\"60\",\"70\",\"80\"],\"tickvals\":[40,50,60,70,80],\"categoryorder\":\"array\",\"categoryarray\":[\"40\",\"50\",\"60\",\"70\",\"80\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Math Score\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895}},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"dragmode\":\"zoom\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"156022b737b7\":{\"x\":{},\"ymin\":{},\"ymax\":{},\"type\":\"scatter\"},\"156018a0792\":{\"x\":{},\"y\":{}}},\"cur_data\":\"156022b737b7\",\"visdat\":{\"156022b737b7\":[\"function (y) \",\"x\"],\"156018a0792\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"off\":\"plotly_doubleclick\",\"persistent\":false,\"dynamic\":false,\"color\":null,\"selectize\":false,\"defaultValues\":null,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0,\"ctGroups\":[\"SharedData945753e8\"]},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n</div>\n<div class=\"col-xs-7\">\n<div id=\"htmlwidget-032ec0a91a5e4f76d7ed\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-032ec0a91a5e4f76d7ed\">{\"x\":{\"crosstalkOptions\":{\"key\":[\"1\",\"2\",\"3\",\"4\"],\"group\":\"SharedData945753e8\"},\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[\"Chinese\",\"Indian\",\"Malay\",\"Others\"],[193,12,108,9],[76.5077720207254,60.6666666666667,57.4444444444444,69.6666666666667],[15.6904028426431,23.3523731841827,21.1347847806846,10.7238052947636],[1.1323572881117,7.04100543784463,2.04317676356147,3.79143772202577]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>RACE<\\/th>\\n      <th>No. of pupils<\\/th>\\n      <th>Avg Scores<\\/th>\\n      <th>Std Dev<\\/th>\\n      <th>Std Error<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n</div>\n</div>\n</div>\n```\n:::\n:::\n\n\n## 6.4 Visualising Uncertainty using ggdist package\n\n[**ggdist**](https://mjskay.github.io/ggdist/) is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualising distributions and uncertainty. It is designed for both frequentist and Bayesian uncertainty visualization, taking the view that uncertainty visualization can be unified through the perspective of distribution visualization:\n\n-   for frequentist models, one visualises confidence distributions or bootstrap distributions (see vignette(\"freq-uncertainty-vis\"));\n\n-   for Bayesian models, one visualises probability distributions (see the tidybayes package, which builds on top of ggdist).\n\nWe use the [`stat_pointinterval()`](https://mjskay.github.io/ggdist/reference/stat_pointinterval.html) of **ggdist** to build a visual for displaying distribution of maths scores by race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +   #<<\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Hands-On_Ex4b_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThis [`stat_pointinterval()`](https://mjskay.github.io/ggdist/reference/stat_pointinterval.html) function comes with many arguments. The following plot creates a plot that displays the median math score for each race group, along with an interval estimate for each group. This can help visualize the differences in math scores across different racial groups and also the variability within each group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam %>%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  point_interval = \"median_qi\"\n  ) +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-On_Ex4b_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nWe can use the [`stat_gradientinterval()`](https://mjskay.github.io/ggdist/reference/stat_gradientinterval.html) function of **ggdist** to build a visual for displaying distribution of maths scores by race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-On_Ex4b_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## 6.5 Visualise Uncertainty with Hypothetical Outcome Plots (HOPs) \n\nThe **ungeviz** package is meant to provide helpful add-on functionality for ggplot2 to visualize uncertainty. The package is particularly focused on hypothetical outcome plots (HOPs) and provides bootstrapping and sampling functionality that integrates well with the ggplot2 API.\n\nStep 1: Install the **ungeviz** package\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"wilkelab/ungeviz\")\n```\n:::\n\n\n::: callout-warning\n## Warning\n\nThe installation should only be carried out once.\n:::\n\nStep 2: Launch the application in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ungeviz)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)\n```\n\n::: {.cell-output-display}\n![](Hands-On_Ex4b_files/figure-html/unnamed-chunk-12-1.gif)\n:::\n:::\n\n\n::: callout-note\n## Note\n\nThe sampler() functions generates sampling and bootstrapping exam scores repeatedly, that can be used in place of data in ggplot2 layers. This help to create the hypothetical outcome plots.\n:::\n",
    "supporting": [
      "Hands-On_Ex4b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.27/datatables.js\"></script>\r\n<link href=\"../../site_libs/dt-core-1.12.1/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-1.12.1/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-1.12.1/js/jquery.dataTables.min.js\"></script>\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n<link href=\"../../site_libs/bootstrap-grid-3.4.1/bootstrap-grid.min.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}