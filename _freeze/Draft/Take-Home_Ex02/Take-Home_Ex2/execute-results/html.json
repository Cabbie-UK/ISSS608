{
  "hash": "2cd70c566f50f223318624e8c78e0125",
  "result": {
    "markdown": "---\ntitle: \"FishEye Knowldge Graph: Identify Temporal Patterns of individual entities and between entities\"\nsubtitle: \"VAST Chaellenge 2023: Mini-Challenge 2\"\nauthor: \"KB\"\ndate: last-modified\neditor: visual\nexecute:\n  freeze: auto \n  warning: false\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n    toc-depth: 4\n---\n\n\n(First Published: May 28, 2023)\n\n## Load all relevant packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(igraph, tidygraph, ggraph, visNetwork, lubridate, clock,               tidyverse, graphlayouts,jsonlite, plotly, patchwork, knitr, kableExtra, igraph, ggdist, heatmaply)\n\noptions(scipen = 999, digits = 15)\n```\n:::\n\n\nimport data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2 <- fromJSON(\"data/mc2_challenge_graph.json\")\n```\n:::\n\n\nExtract the nodes info from mc2 data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes <- as_tibble(mc2$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n```\n:::\n\n\n-   id \\-- Name of the company that originated (or received) the shipment\n\n-   shpcountry \\-- Country the company most often associated with when shipping\n\n-   rcvcountry \\-- Country the company most often associated with when receiving\n\n## Read the original nodes table\n\nWe will store mc2_nodes in rds format for ease of subsequent retrieval. This code need only be executed once and henece. Thereafter we will reload the mc2_nodes dataframe again\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# write_rds(mc2_nodes, \"data/mc2_nodes.rds\")\nmc2_nodes = read_rds(\"data/mc2_nodes.rds\")\n```\n:::\n\n\nExtract the edges info from mc2 data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges <- as_tibble(mc2$links) %>%\n  select(source, target, arrivaldate, hscode, valueofgoods_omu, volumeteu, weightkg,  valueofgoodsusd)\n```\n:::\n\n\n-   arrivaldate \\-- Date the shipment arrived at port in YYYY-MM-DD format.\n\n-   hscode \\-- Harmonized System code for the shipment. Can be joined with the hscodes table to get additional details.\n\n-   valueofgoods_omu \\-- Customs-declared value of the total shipment, in Oceanus Monetary Units (OMU)\n\n-   volumeteu \\-- The volume of the shipment in 'Twenty-foot equivalent units', roughly how many 20-foot standard containers would be required. (Actual number of containers may have been different as there are 20ft and 40ft standard containers and tankers that do not use containers)\n\n-   weightkg \\-- The weight of the shipment in kilograms (if known)\n\n## Read the original edge table\n\nAlso store the mc2_edge info in native rds format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#write_rds(mc2_edges, \"data/mc2_edges.rds\")\nmc2_edges <- read_rds(\"data/mc2_edges.rds\") %>%\n  mutate(arrivaldate = as.Date(arrivaldate, format = \"%Y-%m-%d\"))\n```\n:::\n\n\nAggregate the weight information between each pair of notes and by the relationship type\n\nGet summary stats on the edge data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mc2_edges)\n```\n:::\n\n\nRemove likely duplicate records from edges\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for the presence of duplicate edge \npaste(sum(duplicated(mc2_edges)),\"duplicate records.\")\n```\n:::\n\n\nWe are unsure of the reasons behind the duplicate records and do not discount the possibility that they could be genuine. On balance, we find it unlikely that duplicate records exist for every day, with same weight and among the same pair of entities. Hence, we will use the `distinct()` function on the edge data to only retain only unique edge records for our analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges_unique <- mc2_edges %>%\n  distinct()\n\nsummary(mc2_edges_unique)\n```\n:::\n\n\n**Identifying edge records that relate to the fishing industry**\n\nWe extract the top 5 HS code used for the edge records and match against the [HS Nomenclature 2022](https://www.wcoomd.org/en/topics/nomenclature/instrument-and-tools/hs-nomenclature-2022-edition/hs-nomenclature-2022-edition.aspx) available at World Customs Organisation (WCO)'s website, supplemented by the HSN Code List that is found on [Connect2India](https://connect2india.com/hs-classification.html) website.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhscode_count <- mc2_edges_unique %>%\n  group_by(hscode) %>%\n  summarise(count=n()) %>% \n  ungroup \n\nhead(hscode_count[order(-hscode_count$count), ],n=5)\n```\n:::\n\n\n| S/No. | HS Code | Description                                                                                                                                                                                         |\n|------------------|------------------|------------------------------------|\n| 1     | 306170  | Fish and crustaceans, molluscs and other aquatic invertebrates.                                                                                                                                     |\n| 2     | 950300  | Tricycles, scooters, pedal cars and similar wheeled toys; dolls' carriages; dolls; other toys; reduced-size (\"scale\") models and similar recreational models, working or not; puzzles of all kinds. |\n| 3     | 870899  | Other parts and accessories of the motor vehicles                                                                                                                                                   |\n| 4     | 611020  | Cotton jerseys, pullovers, cardigans, waistcoats and similar articles, knitted or crocheted.                                                                                                        |\n| 5     | 940360  | Other wooden furniture                                                                                                                                                                              |\n\n: From the above, it is obvious not all transactions relate to fishing, We scanned WCO's HS Nomenclature 2022 edition and identified a list 46 HS codes which are associated with fish or the fishing industry and import them in our work environment,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhscode_fish <- read_csv('data/lookup_hscode.csv', show_col_types = FALSE ) %>%\n  mutate(hscode = as.character(hscode))\n```\n:::\n\n\nNext, we will use this list to extract edge records related to fish industry.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges_fish <- mc2_edges_unique %>%\n  filter(hscode %in% hscode_fish$hscode) %>%\n  # further filter by code '1604','1605 for fish products\n  filter(substr(hscode,start = 1,stop=4) %in% c('1604','1605'))\n```\n:::\n\n\nWe do a frequency count by hscode to understand the volume for each hscode, the subset contains 30 hscodes pertaining to different types of seafood.\n\n**Prepare the Edges for Analysis**\n\nGroup edges by source, target, date, and aggregate by count ( which will be renamed as weight), sum of weight, sum of value\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# minimum count (or weight) cut-off for a substantial relationship to exist over 7 years\ncut_off = 20\n\n\n# group by edges \nmc2_edges_aggregated <- mc2_edges_fish %>%\n  mutate(weeknumber = isoweek(arrivaldate),\n         year_month = format(arrivaldate,\"%Y-%m\"),\n         year = year(arrivaldate)) %>%\n  group_by(source,target,hscode, year_month, year) %>%\n  summarise(weight=n(),weight_sum = sum(weightkg),value_goods_sum =sum(valueofgoodsusd, na.rm = TRUE)) %>%\n  filter(source != target) %>%\n  filter(weight>cut_off) %>%\n  ungroup %>%\n  inner_join(select(hscode_fish, hscode, short_desc), by = \"hscode\")\n\n# Save a copy of the edge file\nwrite_rds(mc2_edges_aggregated, \"data/mc2_edges_aggregated.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the edge file\nmc2_edges_aggregated = read_rds(\"data/mc2_edges_aggregated.rds\")\n```\n:::\n\n\ny-o-y plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweight_yoy = ggplot(mc2_edges_aggregated, aes(x= as.factor(year), y = weight_sum/1000000)) +\n  geom_col() +\n  #geom_text(aes(label = weight_sum), vjust = -0.5,color='white') +\n  labs(x = \"Year\", y = \"Total Weight(kg in millions\") +\n  ggtitle(\"Total Weight by Year\")\n\ncount_yoy = ggplot(mc2_edges_aggregated, aes(x= as.factor(year), y = weight)) +\n  geom_col() +\n  #geom_text(aes(label = weight_sum), vjust = -0.5,color='white') +\n  labs(x = \"Year\", y = \"Total Transactions\") +\n  ggtitle(\"Total Transactions by Year\")\n\nvalue_yoy = ggplot(mc2_edges_aggregated, aes(x= as.factor(year), y = value_goods_sum/1000000)) +\n  geom_col() +\n  #geom_text(aes(label = weight_sum), vjust = -0.5,color='white') +\n  labs(x = \"Year\", y = \"Total Value (USD in millions\") +\n  ggtitle(\"Total Value by Year\")\n\n\n(count_yoy + weight_yoy)/value_yoy\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n**Prepare the nodes for Analysis**\n\nThe nodes within the node file must be unique and therefore the `filter` function is used to extract only the nodes that appear based on the *source* and *target*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes_aggregated <- mc2_nodes %>%\n  filter(id  %in% c(mc2_edges_aggregated$source, mc2_edges_aggregated$target)) %>%\n  # Duplicate the id column as this name will be replaced once we convert to when we apply tbl_graph()\n  mutate(label = id) %>%\n  mutate(row_id = row_number()) %>%\n  distinct() \n\n# Replace with NA values in shpcountry and rcvcountry to prevent downstream issue\nmc2_nodes_aggregated <- replace(mc2_nodes_aggregated, is.na(mc2_nodes_aggregated), 'unknown')\n\n# Save a copy of the nodes file\nwrite_rds(mc2_nodes_aggregated, \"data/mc2_nodes_aggregated.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the node file\nmc2_nodes_aggregated = read_rds(\"data/mc2_nodes_aggregated.rds\")\n```\n:::\n\n\n**Prepare the tbl_graph_object**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_graph <- tbl_graph(nodes = mc2_nodes_aggregated,\n                           edges = mc2_edges_aggregated, \n                           directed = TRUE)\n```\n:::\n\n\n**Derive centrality measures for nodes**\n\nSince this is a directed graph, will compute the in-degree centrality, out-degree centrality, closeness and betweenness measures for the nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_graph <- mc2_graph %>%\n  activate(nodes) %>% \n  mutate(\n          in_deg_centrality = round(centrality_degree(weights = weight, mode = \"in\", loops = FALSE),3),\n          out_deg_centrality = round(centrality_degree(weights = weight, mode = \"out\", loops = FALSE),3),\n          out_deg_closeness = round(centrality_closeness(weights=weight,mode='out',normalized = TRUE),3),\n          in_deg_closeness = round(centrality_closeness(weights=weight,mode='in',normalized = TRUE),3)) \n\n#%>%\n  # mutate(combined_degree = in_deg_centrality - out_deg_centrality) %>%\n  # mutate(combi_norm_degree =((combined_degree-min(combined_degree))/(max(combined_degree)-min(combined_degree)) )*100) \n```\n:::\n\n\nCharting a plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\nmc2_graph %>%\n  ggraph(layout = 'fr') +\n  geom_edge_link(aes(width=weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes())\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nRemove disconnected nodes and focus on the main graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a copy of the mc2_graph as we want to preserve the original graph\ng <- mc2_graph\n\n# Extract the graph with the biggest number of the members (main graph)\nV(g)$comp <- components(g)$membership\nmain <- induced_subgraph(g,V(g)$comp==1)\n```\n:::\n\n\nReplot graph to check\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nset.seed(123)\n\nmain %>%\n  ggraph(layout = 'kk') +\n  geom_edge_link(aes(width=weight,\n                     colour = factor(year)), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes()) +\n  scale_color_viridis() +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert tbl_graph to igraph object\nigraph_obj <- main\n\n# Compute the number of nodes and edges\nnum_nodes <- vcount(igraph_obj)\nnum_edges <- ecount(igraph_obj)\n\n# Print the results\ndf <- data.frame(Num_of_Nodes = num_nodes, Num_of_Edges = num_edges)\n\nkable(head(df), format = 'html') \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Num_of_Nodes </th>\n   <th style=\"text-align:right;\"> Num_of_Edges </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 151 </td>\n   <td style=\"text-align:right;\"> 771 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#\ncreate_graph <- function(data, range, title) {\n  \n  set.seed(123)\n  \n  g <- data %>%\n    as_tbl_graph() %>%\n    activate(edges) %>%\n    filter(year %in% range) %>%\n    activate(nodes) %>%\n    mutate(\n      in_deg_norm = ifelse(in_deg_centrality == 0, 0, (in_deg_centrality - min(in_deg_centrality)) / (max(in_deg_centrality) - min(in_deg_centrality)) + 1),\n      out_deg_norm = ifelse(out_deg_centrality == 0, 0, (1 - (out_deg_centrality - min(out_deg_centrality)) / (max(out_deg_centrality) - min(out_deg_centrality))))\n    ) %>%\n    mutate(combined_in_out_deg = in_deg_norm + out_deg_norm) %>%\n    mutate(row_id = ifelse((combined_in_out_deg>=1.6) | (combined_in_out_deg <=0.4),row_id,\"\"))\n  \n  Isolated <- which(degree(g) == 0)\n  g2 <- delete.vertices(g, Isolated)\n  \n  g2 %>%\n    as_tbl_graph() %>%\n    ggraph(layout = 'kk') +\n    geom_edge_link(aes(), alpha = 0.5) +\n    geom_edge_fan(\n      aes(color = short_desc),\n      arrow = arrow(length = unit(2, 'mm')),\n      end_cap = circle(3, 'mm'),\n      start_cap = circle(3, 'mm')\n    ) +\n    geom_node_circle(aes(fill = combined_in_out_deg,r = 0.2 ),alpha=0.8) +\n    scale_fill_gradient2(low = \"green\", mid = \"gray\", high = \"red\", midpoint = 1) +\n    geom_node_text(aes(label = row_id, size=0.8), colour = \"black\") +\n    theme_graph() +\n    theme(legend.position = \"top\") +\n    labs(title = title)\n}\n```\n:::\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028, 2029,2030,2031,2032,2033,2034)\n\ncreate_graph(main,range,\"Main Network of the Trading Entities in 2034\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\nTemporal Analysis of Individuals and between entities\n\n::: panel-tabset\n## 2028\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028)\n\ncreate_graph(main,range,\"2028\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\ntest\n\n-   ttt\n\n-   tt\n\n## 2029\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028,2029)\n\ncreate_graph(main,range,\"2029\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n\n## 2030\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028,2029,2030)\n\ncreate_graph(main,range,\"2030\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n## 2031\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028,2029,2030, 2031)\n\ncreate_graph(main,range,\"2031\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n## 2032\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028,2029,2030, 2031, 2032)\n\ncreate_graph(main,range,\"2032\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n## 2033\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028,2029,2030, 2031, 2032, 2033)\n\ncreate_graph(main,range,\"2033\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-33-1.png){width=960}\n:::\n:::\n\n\n## 2034\n\n\n::: {.cell fig.asp='1'}\n\n```{.r .cell-code}\nrange <- c(2028,2029,2030, 2031, 2032, 2033, 2034)\n\ncreate_graph(main,range,\"2034\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\nFunction to plot yearly graph\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nCentrality measures of various transactions\n\nIn-degree, Out-Degree, Betweenness Score\n\n\n::: {.cell}\n\n:::\n\n\nTop 10 nodes with 'in-degree\" scores:\n\n\n::: {.cell}\n\n:::\n\n\nView Graph Year by year\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(mc2_graph, layout = \"nicely\") +\n  geom_edge_link(aes(width=weight)) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes()) +\n  theme_graph() +\n  facet_edges(~year,ncol=1)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex2_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mc2_nodes_interactive <- mc2_graph %>%\n#  activate(nodes) %>%\n#  as_tibble() %>%\n#  mutate(title = paste(\n#                         '\\n In-deg = ',in_deg_centrality, ',',\n#                         \"\\n Pagerank =\", pagerank, ',',\n#                         \"\\n Out-deg =\", out_deg_centrality))\n```\n:::\n\n\n\\(c\\) Prepare the group, size\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mc2_nodes_interactive_in <- mc2_graph %>% \n#   activate(nodes) %>%\n#   as_tibble() %>%\n#   mutate(class = cut_interval(in_deg_centrality, n = 5, \n#                               style = \"quantile\")) %>%\n#   rename(group = class)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# visNetwork(mc2_nodes_interactive_in,\n#            mc2_edges_interactive,\n#           main = \"Transaction graph grouped by In-Deg centrality intervals\",\n#            height = \"500px\", width = \"100%\") %>%\n#   visIgraphLayout(layout = \"layout_with_fr\") %>%\n#   #visNodes(shape = 'dot', value = 'pagerank') %>%\n#   visEdges(arrows = 'to',\n#            smooth = list(enables = TRUE,\n#                          type= 'continuous'),\n#            shadow = FALSE,\n#            dash = FALSE) %>% \n#   visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),\n#              nodesIdSelection = TRUE,\n#              selectedBy = \"group\") %>%\n#   visInteraction(hideEdgesOnDrag = TRUE) %>% \n#   visLegend() %>%\n#   visLayout(randomSeed = 123)\n```\n:::\n\n\nGraph by out degree\n\n\\(a\\) Create group\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mc2_nodes_interactive_out <- mc2_graph %>% \n#   activate(nodes) %>%\n#   as_tibble() %>%\n#   mutate(class = cut_interval(out_deg_centrality, n = 5, \n#                               style = \"quantile\")) %>%\n#   rename(group = class)\n```\n:::\n\n\n\\(b\\) Create graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# visNetwork(mc2_nodes_interactive_out,\n#            mc2_edges_interactive,\n#           main = \"Transaction graph grouped by Out-Deg centrality intervals\",\n#            height = \"500px\", width = \"100%\") %>%\n#   visIgraphLayout(layout = \"layout_with_fr\") %>%\n#   #visNodes(shape = 'dot', value = 'pagerank') %>%\n#   visEdges(arrows = 'to',\n#            smooth = list(enables = TRUE,\n#                          type= 'continuous'),\n#            shadow = FALSE,\n#            dash = FALSE) %>% \n#   visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),\n#              nodesIdSelection = TRUE,\n#              selectedBy = \"group\") %>%\n#   visInteraction(hideEdgesOnDrag = TRUE) %>% \n#   visLegend() %>%\n#   visLayout(randomSeed = 123)\n```\n:::\n\n\nLook into the to supplier Playa del Tesoro OJSC\n\n\\(a\\) Who are its customers\n\nFrom the map, the sole customer was Fresh Wharf SRL Consulting.\n\nOthers include:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mc2_edges_unique %>%\n#   filter(source == 'Playa del Tesoro OJSC') %>%\n#   group_by(source, target, hscode) %>%\n#   summarise(count=n()) %>%\n#   arrange(desc(count))\n```\n:::\n\n\nGet transactions with Fresh Wharf SRL consulting\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# playa <- mc2_edges_aggregated %>%\n#   filter(source == 'Playa del Tesoro OJSC') %>%\n#   mutate(month = substr(year_month,start = 6,stop=7))\n# \n# ggplot(playa, \n#        aes(x = month, \n#            y = weight,\n#            group = year)) +\n#   geom_line() +\n#   facet_wrap(~year, ncol=1) +\n#   \n#   theme_minimal()\n```\n:::\n\n\nHeatmap\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# playa_heatmap <- playa %>%\n#   select(year, month, weight) %>%\n#   pivot_wider(names_from = month, values_from = weight) \n#   \n# \n# playa_heatmap <- replace(playa_heatmap, is.na(playa_heatmap), 0)\n# \n# row.names(playa_heatmap) <- playa_heatmap$year\n# \n# playa_matrix <- data.matrix(playa_heatmap)\n# \n# playa_matrix <- playa_matrix[,-1]\n# \n# heatmap(playa_matrix,Rowv=NA, Colv=NA)\n```\n:::\n\n\nLook at company Estrella de la Costa SRL\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mc2_edges_fish %>%\n#   filter(source == 'Estrella de la Costa SRL') %>%\n#   group_by(source, target, hscode) %>%\n#   summarise(count=n()) %>%\n#   arrange(desc(count))\n```\n:::\n\n\nCheck the trend\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# estrella <- mc2_edges_aggregated %>%\n#   filter(source == 'Estrella de la Costa SRL') %>%\n#   inner_join(mc2_nodes, select(id, rcvcountry), by = c('source'='id'))\n# \n# ggplot(estrella, \n#        aes(x = year_month, \n#            y = weight,\n#            group = target)) +\n#   geom_line() +\n#   facet_wrap(~target, ncol=1) +\n#   \n#   theme_minimal()\n```\n:::\n\n\n--\\>Look at company OceanicOrigin Foods Co Consulting\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mc2_edges_fish %>%\n#   filter(source == 'OceanicOrigin Foods Co Consulting') %>%\n#   group_by(source, target, hscode) %>%\n#   summarise(count=n()) %>%\n#   arrange(desc(count))\n```\n:::\n\n\ncheck the trend\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# oceanic <- mc2_edges_aggregated %>%\n#   filter(source == 'OceanicOrigin Foods Co Consulting') %>%\n#   inner_join(mc2_nodes, select(id, rcvcountry), by = c('source'='id'))\n# \n# ggplot(oceanic, \n#        aes(x = year_month, \n#            y = weight,\n#            group = target)) +\n#   geom_line() +\n#   facet_wrap(~target, ncol=1) +\n#   theme_minimal()\n```\n:::\n\n\nCode block\n\n\n::: {.cell}\n\n:::\n\n\nCode block\n\n\n::: {.cell}\n\n:::\n\n\nCode block\n\n\n::: {.cell}\n\n:::\n\n\nCode block\n\n\n::: {.cell}\n\n:::\n\n\nCode block\n\n\n::: {.cell}\n\n:::\n\n\nReferences\n\n-   Harshita Kanodia (June 2022), IUU Fishing in the Indian Ocean: A Security Threat. Diplomatist, https://diplomatist.com/2022/06/09/lets-catch-the-big-fish/\n\n-   \n",
    "supporting": [
      "Take-Home_Ex2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}